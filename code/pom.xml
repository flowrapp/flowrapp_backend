<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.5.4</version>
  </parent>

  <groupId>io.github.flowrapp</groupId>
  <artifactId>flowrapp-backend</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <packaging>pom</packaging>
  <name>${project.groupId}-${project.artifactId}</name>

  <modules>
    <module>boot</module>
    <module>domain</module>
    <module>infrastructure</module>
    <module>application</module>
  </modules>

  <properties>
    <!-- Builds configuration -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.showWarnings>true</maven.compiler.showWarnings>
    <maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>

    <!-- SonarCloud -->
    <sonar.organization>flowrapp</sonar.organization>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.exclusions>**/*Config.java,**/Application.java,**/*Exception.java,**/**Entity.java,**/io/github/flowrapp/model/**,**/io/github/flowrapp/value/**,**/io/github/flowrapp/config/**</sonar.exclusions>

    <java.version>21</java.version>

    <!-- Dependencies versions -->
    <instancio.version>5.5.1</instancio.version>
    <org.mapstruct.version>1.6.3</org.mapstruct.version>
    <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
    <jspecify.version>1.0.0</jspecify.version>
    <apache-commons.version>4.5.0</apache-commons.version>
    <threeten.version>1.8.0</threeten.version>
    <swagger.version>2.8.9</swagger.version>
    <openapiSwaggerJackson.version>0.2.6</openapiSwaggerJackson.version>
    <google-api-client.version>1.37.1</google-api-client.version>
    <github-api.version>1.318</github-api.version>

    <!-- Plugin versions -->
    <maven.compiler.plugin.version>3.14.0</maven.compiler.plugin.version>
    <docker.compose.plugin.version>4.0.0</docker.compose.plugin.version>
    <maven.failsafe.plugin.version>3.5.3</maven.failsafe.plugin.version>
    <spotless.version>2.46.1</spotless.version>
    <jacoco.plugin.version>0.8.13</jacoco.plugin.version>
    <openapiGenerator.version>7.14.0</openapiGenerator.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Internal -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>boot</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>domain</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.flowrapp</groupId>
        <artifactId>application</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>infrastructure</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.flowrapp</groupId>
        <artifactId>input-rest</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.flowrapp</groupId>
        <artifactId>rest-config</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.flowrapp</groupId>
        <artifactId>rest-main-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.flowrapp</groupId>
        <artifactId>output-adapters</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.flowrapp</groupId>
        <artifactId>jpa-business-bbdd</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- Others -->
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${org.mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.instancio</groupId>
        <artifactId>instancio-junit</artifactId>
        <version>${instancio.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-collections4</artifactId>
        <version>${apache-commons.version}</version>
      </dependency>
      <!-- Date and time utilities -->
      <dependency>
        <groupId>org.threeten</groupId>
        <artifactId>threeten-extra</artifactId>
        <version>${threeten.version}</version>
      </dependency>
      <!-- Swagger OpenAPI Documentation -->
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        <version>${swagger.version}</version>
      </dependency>
      <dependency>
        <groupId>org.openapitools</groupId>
        <artifactId>jackson-databind-nullable</artifactId>
        <version>${openapiSwaggerJackson.version}</version> <!-- Check for latest version -->
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.jspecify</groupId>
      <artifactId>jspecify</artifactId>
      <version>${jspecify.version}</version>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.groupId}-${project.artifactId}</finalName>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <configuration>
            <skip>false</skip>
            <mainClass>io.github.flowrapp.Application</mainClass>
            <excludes>
              <exclude>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
              </exclude>
              <exclude>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
              </exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <configuration>
            <archive>
              <manifestEntries>
                <Implementation-Title>${project.name}</Implementation-Title>
                <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
              </manifestEntries>
              <manifestSections>
                <manifestSection>
                  <name>${project.name}</name>
                  <manifestEntries>
                    <Version>${project.version}</Version>
                  </manifestEntries>
                </manifestSection>
              </manifestSections>
            </archive>
          </configuration>
        </plugin>
         <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <configuration>
            <attach>false</attach>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.dkanejs.maven.plugins</groupId>
          <artifactId>docker-compose-maven-plugin</artifactId>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.openapitools</groupId>
          <artifactId>openapi-generator-maven-plugin</artifactId>
          <version>${openapiGenerator.version}</version>
          <configuration>
            <generatorName>spring</generatorName>
            <modelNameSuffix>DTO</modelNameSuffix>
            <configOptions>
              <interfaceOnly>true</interfaceOnly>
              <library>spring-boot</library>
              <useTags>true</useTags>
              <useJakartaEe>true</useJakartaEe>
              <useSpringBoot3>true</useSpringBoot3>
            </configOptions>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.mysema.maven</groupId>
          <artifactId>apt-maven-plugin</artifactId>
          <version>1.1.3</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <compilerArgs>
          <!-- This arg ensures that mapstruct generate a Spring -->
          <!-- Bean out of every mapper implementation -->
          <compilerArg>-Amapstruct.defaultComponentModel=spring</compilerArg>
        </compilerArgs>
          <annotationProcessorPaths>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${org.mapstruct.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <!-- This is needed when using Lombok 1.8.16 and above -->
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
              <version>${lombok-mapstruct-binding.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <!-- Add generate sources to show in the IDE -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-classes</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/annotations</source>
                <source>${project.build.directory}/generated-sources/event</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless.version}</version>
        <configuration>
          <java>
            <eclipse>
              <file>src/main/config/eclipse-java-google-style.xml</file>
            </eclipse>
            <removeUnusedImports />
            <importOrder>
              <order>static **,java,io.github.flowrapp,*</order>
            </importOrder>
            <excludes>
              <!-- Ignore auto-generated code (MapStruct, OpenAPI, etc.) in all modules -->
              <exclude>target/generated-sources/**</exclude>
              <exclude>target/generated-sources/annotations/**</exclude>
              <exclude>target/generated-sources/openapi/**</exclude>
            </excludes>
          </java>
        </configuration>
        <executions>
          <execution>
            <id>spotless-check</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.dkanejs.maven.plugins</groupId>
        <artifactId>docker-compose-maven-plugin</artifactId>
        <version>${docker.compose.plugin.version}</version>
        <inherited>false</inherited>
        <configuration>
          <envFile>${project.basedir}/boot/src/test/resources/compose/.env</envFile>
          <composeFile>${project.basedir}/boot/src/test/resources/compose/docker-compose.yml</composeFile>
          <detachedMode>true</detachedMode>
          <removeVolumes>true</removeVolumes>
          <skip>false</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>IT</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven.failsafe.plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.plugin.version}</version>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <formats>
                    <format>XML</format>
                  </formats>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
